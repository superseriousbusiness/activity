// Code generated by astool. DO NOT EDIT.

package streams

import (
	typecanannounce "github.com/superseriousbusiness/activity/streams/impl/gotosocial/type_canannounce"
	typecanlike "github.com/superseriousbusiness/activity/streams/impl/gotosocial/type_canlike"
	typecanreply "github.com/superseriousbusiness/activity/streams/impl/gotosocial/type_canreply"
	typeinteractionpolicy "github.com/superseriousbusiness/activity/streams/impl/gotosocial/type_interactionpolicy"
	vocab "github.com/superseriousbusiness/activity/streams/vocab"
)

// IsOrExtendsGoToSocialCanAnnounce returns true if the other provided type is the
// CanAnnounce type or extends from the CanAnnounce type.
func IsOrExtendsGoToSocialCanAnnounce(other vocab.Type) bool {
	return typecanannounce.IsOrExtendsCanAnnounce(other)
}

// IsOrExtendsGoToSocialCanLike returns true if the other provided type is the
// CanLike type or extends from the CanLike type.
func IsOrExtendsGoToSocialCanLike(other vocab.Type) bool {
	return typecanlike.IsOrExtendsCanLike(other)
}

// IsOrExtendsGoToSocialCanReply returns true if the other provided type is the
// CanReply type or extends from the CanReply type.
func IsOrExtendsGoToSocialCanReply(other vocab.Type) bool {
	return typecanreply.IsOrExtendsCanReply(other)
}

// IsOrExtendsGoToSocialInteractionPolicy returns true if the other provided type
// is the InteractionPolicy type or extends from the InteractionPolicy type.
func IsOrExtendsGoToSocialInteractionPolicy(other vocab.Type) bool {
	return typeinteractionpolicy.IsOrExtendsInteractionPolicy(other)
}
