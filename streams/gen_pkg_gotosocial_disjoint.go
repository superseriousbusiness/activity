// Code generated by astool. DO NOT EDIT.

package streams

import (
	typecanannounce "github.com/superseriousbusiness/activity/streams/impl/gotosocial/type_canannounce"
	typecanlike "github.com/superseriousbusiness/activity/streams/impl/gotosocial/type_canlike"
	typecanreply "github.com/superseriousbusiness/activity/streams/impl/gotosocial/type_canreply"
	typeinteractionpolicy "github.com/superseriousbusiness/activity/streams/impl/gotosocial/type_interactionpolicy"
	vocab "github.com/superseriousbusiness/activity/streams/vocab"
)

// GoToSocialCanAnnounceIsDisjointWith returns true if CanAnnounce is disjoint
// with the other's type.
func GoToSocialCanAnnounceIsDisjointWith(other vocab.Type) bool {
	return typecanannounce.CanAnnounceIsDisjointWith(other)
}

// GoToSocialCanLikeIsDisjointWith returns true if CanLike is disjoint with the
// other's type.
func GoToSocialCanLikeIsDisjointWith(other vocab.Type) bool {
	return typecanlike.CanLikeIsDisjointWith(other)
}

// GoToSocialCanReplyIsDisjointWith returns true if CanReply is disjoint with the
// other's type.
func GoToSocialCanReplyIsDisjointWith(other vocab.Type) bool {
	return typecanreply.CanReplyIsDisjointWith(other)
}

// GoToSocialInteractionPolicyIsDisjointWith returns true if InteractionPolicy is
// disjoint with the other's type.
func GoToSocialInteractionPolicyIsDisjointWith(other vocab.Type) bool {
	return typeinteractionpolicy.InteractionPolicyIsDisjointWith(other)
}
